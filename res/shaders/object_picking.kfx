Shader ObjectPicking
{
    Layout
    {
        // Vertex layouts
        Vertex Main
        {
            Binding     0 24 vertex
            Attribute   float3 Position 0 0 0
            Attribute   float3 ObjectId 0 1 12
        }

        UniformBuffer GlobalUniformBuffer
        {
            mat4 Projection;
            mat4 View;
        }

        // Constant buffers/Push constants
        ConstantBuffer Main
        {
            mat4    Model Stage(Vertex);
        }
    }

    GLSL ToScreen
    {
        #version 450
        #if defined VERTEX

        // Inputs
        layout (location = 0) in vec3 inPosition;
        layout (location = 1) in vec3 inObjectId;

        // Written to; using descriptor sets
        layout (set = 0, binding = 0) uniform GlobalUniformBuffer
        {
            mat4 Projection;
            mat4 View;
        } globalState;

        layout (push_constant) uniform pushConstants
        {
            mat4 Model;
        } variableState;

        // Output from the vertex shader to the fragment shader
        layout(location = 0) out vec3 outObjectId;

        void main()
        {
            gl_Position = globalState.Projection * globalState.View * variableState.Model * vec4(inPosition, 1.0);
            outObjectId = inObjectId;
        }

        #endif // VERTEX

        #if defined FRAGMENT

        layout(location = 0) in vec3 inObjectId;

        // Outputs
        // layout(set = 1, binding = 1) writeonly buffer ObjectPickingSSBO 
        // {
        //     uint SelectedObjectId;
        // } ssbo;

        layout (location = 0) out vec4 outColor;

        void main() 
        {
            // ssbo.SelectedObjectId = inObjectId;
            outColor = vec4(inObjectId, 1);
        }

        #endif // FRAGMENT
    }

    RenderState
    {
        State Default
        {       
            Cull            Off
            ZTest           Less
            ZWrite          On
            Blend           Off
            BlendOp         Add, Add
            PolygonMode     Fill
            LineWidth       1.0   
        }
    }

    Pass ToScreen
    {
        RenderState     Default
        VertexLayout    Main
        Resources       Main
        ConstantBuffer  Main
        VertexShader    ToScreen
        FragmentShader  ToScreen
    }
}